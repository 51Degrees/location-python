name: Build and Publish Python Location

trigger:
  - master
  - develop
  - release/* 

# Don't trigger for a pull request
pr: none

variables:
  - group: CIAutomation
  # Access token for the git repository. Used by the git tag task.
  - name: system_accesstoken
    value: $(System.AccessToken)
  # Include shared variables
  - template: shared-variables.yml

resources:
  repositories:
    - repository: ciTemplates # Id of the repository used to reference to in this script
      type: git
      name: common-ci # Name of the actual repository

stages:

- stage: Build_Packages
  jobs:
  - template: shared-git-version-job.yml@ciTemplates
    parameters:
      imageName: $(linuxImage)

  - job: Create_Packages
    displayName: Create Packages
    dependsOn: Versioning
    condition: and(succeeded(), ne(variables['CreatePackages'], 'Off'))
  
    variables:
      GitVersionSemVer: $[ dependencies.Versioning.outputs['SetGitVersionVars.GitVersionSemVer'] ]
  
    pool:
      vmImage: $(linuxImage)
            
    steps:
    # The lines below are needed to allow the pipeline access to the
    # OAuth access token that controls write access to the git repository. 
    # (Required for GitTag task)
    - checkout: self
      lfs: true
      submodules: recursive
      persistCredentials: true
      
    # Set python version to be used to build the packages.
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(pythonVersionDefault)
        addToPath: True
      displayName: 'Use Python $(pythonVersionDefault)'

    - script: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
      displayName: 'Install dependencies'

    # Delete existing packages in the 'dist' directory
    - bash: |       
        rm -f ./location-python/dist/*
        if [ $? != 0]; then
            echo "Failed to delete existing dist folder for location-python"
            exit 1
        fi
      displayName: 'Delete existing packages'
      
    # Build Package
    - bash: |
        echo 'Setting package version to $(GitVersionSemVer)'
        echo $(GitVersionSemVer) >> version.txt
        if [  $? != 0]; then
          echo "Failed to create version file."
          exit 1
        fi
        python setup.py sdist bdist_wheel
        if [ $? != 0 && ! -d dist]; then
            echo "Failed to create package for fiftyone_pipeline_cloudrequestengine"
            exit 1
        fi
      displayName: 'Build Package'
      
    # Copy artifacts contents.
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
         **/dist/*
        targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: 'Copy Build files'
      condition: succeeded()

    - script: |
       ls $(Build.ArtifactStagingDirectory)/**/*   
      displayName: 'List artifact staging contents'
      condition: succeededOrFailed()
      failOnStderr: true      
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish Python artifact'
      condition: succeeded()
      
  - template: shared-git-tag-job.yml@ciTemplates
    parameters:
      imageName: $(linuxImage)
      jobDependencies: [Versioning,Create_Packages]